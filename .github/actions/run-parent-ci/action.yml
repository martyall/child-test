name: 'GitHub Action Submodule Updates'
description: 'Update submodules and creates new pull request against parent repository'
author: 'releasehub (updated)'
branding:
  icon: 'git-pull-request'
  color: 'yellow'
inputs:
  github_token:
    description: 'Github Token'
    required: true
  checkout_branch:
    description: 'Branch to checkout'
    required: false
    default: 'main'
  pr_against_branch:
    description: 'Parent branch'
    required: true
  parent_repository:
    description: 'Parent Repository'
    required: true
  owner:
    description: 'Owner'
    required: true
  label:
    description: 'Label to add to the PR'
    required: false
    default: 'submodule-update'
  
runs:
  using: 'composite'
  steps:
  - name: Create parent repo directory
    shell: bash
    run: mkdir -p parent-repo
    
  - name: Checkout parent repository and branch
    uses: actions/checkout@v4
    with:
      token: ${{ inputs.github_token }}
      repository: ${{ inputs.parent_repository }}
      ref: ${{ inputs.checkout_branch }}
      submodules: true
      fetch-depth: 0
      path: parent-repo
  
  - name: Create new branch and push changes
    shell: bash
    id: commit-push
    working-directory: parent-repo
    run: |
      git config user.name github-actions
      git config user.email github-actions@github.com
      git submodule update --remote
      
      # Get the short commit SHA
      SUBMODULE_SHA=$(cd child-test && git rev-parse --short HEAD)
      echo "submodule_sha=$SUBMODULE_SHA" >> $GITHUB_OUTPUT
      
      git checkout -b $GITHUB_RUN_ID
      
      # Check if there are changes to commit
      if git diff --quiet; then
        echo "status=unchanged" >> $GITHUB_OUTPUT
        echo "No changes to submodules detected."
        exit 0
      else
        git commit -am "updating submodules to $SUBMODULE_SHA"
        git push --set-upstream origin $GITHUB_RUN_ID
        echo "status=changed" >> $GITHUB_OUTPUT
      fi
  
  - name: Create pull request against target branch
    if: steps.commit-push.outputs.status == 'changed'
    uses: actions/github-script@v7
    id: create-pr
    with:
      github-token: ${{ inputs.github_token }}
      script: |
        const pr = await github.rest.pulls.create({
          owner: '${{ inputs.owner }}',
          repo: '${{ inputs.parent_repository }}'.split('/')[1].trim(),
          head: process.env.GITHUB_RUN_ID,
          base: '${{ inputs.pr_against_branch }}',
          title: `[DO NOT MERGE] [Auto-generated] Update submodule to ${{ steps.commit-push.outputs.submodule_sha }}`,
          body: `Updates the submodule to commit ${{ steps.commit-push.outputs.submodule_sha }} from run ${process.env.GITHUB_RUN_ID}`,
        });
        
        const prNumber = pr.data.number;
        const prUrl = pr.data.html_url;
        
        console.log(`PR created: ${prUrl}`);
        console.log(`You can monitor the workflows triggered by this PR at:`);
        console.log(`https://github.com/${{ inputs.owner }}/${{ inputs.parent_repository }}'.split('/')[1].trim()/actions`);
        
        process.env.PR_NUMBER = prNumber.toString();
        process.env.PR_URL = prUrl;
        
        return { pr_number: prNumber, pr_url: prUrl };
  
  - name: Set PR info in environment
    if: steps.commit-push.outputs.status == 'changed'
    shell: bash
    run: |
      echo "PR_NUMBER=${{ fromJSON(steps.create-pr.outputs.result).pr_number }}" >> $GITHUB_ENV
      echo "PR_URL=${{ fromJSON(steps.create-pr.outputs.result).pr_url }}" >> $GITHUB_ENV
      
      echo "::notice::Pull Request created: ${{ fromJSON(steps.create-pr.outputs.result).pr_url }}"
      echo "::notice::You can monitor the parent repository workflows at: https://github.com/${{ inputs.owner }}/${{ inputs.parent_repository }}"
  
  - name: Add labels
    if: steps.commit-push.outputs.status == 'changed'
    uses: actions/github-script@v7
    with:
      github-token: ${{ inputs.github_token }}
      script: |
        const prNumber = Number(process.env.PR_NUMBER);
        
        console.log(`Adding labels to PR #${prNumber}`);
        
        await github.rest.issues.addLabels({
          issue_number: prNumber,
          owner: '${{ inputs.owner }}',
          repo: '${{ inputs.parent_repository }}'.split('/')[1].trim(),
          labels: ['${{ inputs.label }}']
        });
