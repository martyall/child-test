name: 'GitHub Action Submodule Updates'
description: 'Update submodules and creates new pull request against parent repository'
author: 'releasehub (updated)'
branding:
  icon: 'git-pull-request'
  color: 'yellow'
inputs:
  github_token:
    description: 'Github Token'
    required: true
  checkout_branch:
    description: 'Branch to checkout'
    required: false
    default: 'main'
  pr_against_branch:
    description: 'Parent branch'
    required: true
  parent_repository:
    description: 'Parent Repository'
    required: true
  owner:
    description: 'Owner'
    required: true
  label:
    description: 'Label to add to the PR'
    required: false
    default: 'submodule-update'
  
runs:
  using: 'composite'
  steps:
  - name: Checkout parent repository and branch
    uses: actions/checkout@v4
    with:
      token: ${{ inputs.github_token }}
      repository: ${{ inputs.parent_repository }}
      ref: ${{ inputs.checkout_branch }}
      submodules: true
      fetch-depth: 0
  
  - name: Create new branch and push changes
    shell: bash
    id: commit-push
    run: |
      git config user.name github-actions
      git config user.email github-actions@github.com
      git submodule update --remote
      git checkout -b $GITHUB_RUN_ID
      
      # Check if there are changes to commit
      if git diff --quiet; then
        echo "status=unchanged" >> $GITHUB_OUTPUT
        echo "No changes to submodules detected."
        exit 0
      else
        git commit -am "updating submodules"
        git push --set-upstream origin $GITHUB_RUN_ID
        echo "status=changed" >> $GITHUB_OUTPUT
      fi
  
  - name: Create pull request against target branch
    uses: actions/github-script@v7
    id: create-pr
    with:
      github-token: ${{ inputs.github_token }}
      script: |
        const pr = await github.rest.pulls.create({
          owner: '${{ inputs.owner }}',
          repo: '${{ inputs.parent_repository }}'.split('/')[1].trim(),
          head: process.env.GITHUB_RUN_ID,
          base: '${{ inputs.pr_against_branch }}',
          title: `[Auto-generated] Submodule Updates ${process.env.GITHUB_RUN_ID}`,
          body: `[Auto-generated] Submodule Updates ${process.env.GITHUB_RUN_ID}`,
        });
        
        return { pr_number: pr.data.number };
  
  - name: Add labels
    uses: actions/github-script@v7
    with:
      github-token: ${{ inputs.github_token }}
      script: |
        const prNumber = ${{ steps.create-pr.outputs.result }}.pr_number;
        
        await github.rest.issues.addLabels({
          issue_number: prNumber,
          owner: '${{ inputs.owner }}',
          repo: '${{ inputs.parent_repository }}'.split('/')[1].trim(),
          labels: ['${{ inputs.label }}']
        });
